// Classe Semaforo com Programação Orientada a Objetos POO e uso de ponteiro
class Semaforo {
  private:
    int pinoVermelho;
    int pinoAmarelo;
    int pinoVerde;

  public:
    // Construtor: define os pinos
    Semaforo(int vermelho, int amarelo, int verde) {
      pinoVermelho = vermelho;
      pinoAmarelo = amarelo;
      pinoVerde = verde;
    }

    // Inicializa os pinos como saída
    void iniciar() {
      pinMode(pinoVermelho, OUTPUT);
      pinMode(pinoAmarelo, OUTPUT);
      pinMode(pinoVerde, OUTPUT);
    }

    // Liga e desliga os LEDs conforme a fase
    void vermelho() {
      digitalWrite(pinoVermelho, HIGH);
      digitalWrite(pinoAmarelo, LOW);
      digitalWrite(pinoVerde, LOW);
    }

    void amarelo() {
      digitalWrite(pinoVermelho, LOW);
      digitalWrite(pinoAmarelo, HIGH);
      digitalWrite(pinoVerde, LOW);
    }

    void verde() {
      digitalWrite(pinoVermelho, LOW);
      digitalWrite(pinoAmarelo, LOW);
      digitalWrite(pinoVerde, HIGH);
    }
};

// Criando o objeto usando ponteiro
Semaforo* semaforo;

void setup() {
  // Instancia o objeto dinamicamente com "new"
  semaforo = new Semaforo(13, 12, 11);
  semaforo->iniciar();
}

void loop() {
  // Liga a luz vermelha por 6 segundos (6000 milissegundos)
  semaforo->vermelho();
  delay(6000);

  // Liga a luz verde por 4 segundos (4000 milissegundos)
  semaforo->verde();
  delay(4000);

  // Liga a luz amarela por 2 segundos (2000 milissegundos)
  semaforo->amarelo();
  delay(2000);
}
